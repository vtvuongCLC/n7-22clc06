// #include "header/findObject.h"


// void viewInfoOfCourse(CourseInfo infoThisCourse){

//     cout    << left << setw(15) << infoThisCourse.courseID 
//             << left << setw(20) << infoThisCourse.courseName 
//             << left << setw(15) << infoThisCourse.className
//             << left << setw(15) << infoThisCourse.Teacher
//             << left << setw(8)  << infoThisCourse.credit
//             << left << setw(15) << infoThisCourse.maxStudent  
//             << infoThisCourse.CourseDate.day
//             << ", " << infoThisCourse.CourseDate.session << "   ";                                 
// }

// void viewListOfCoursesIn1Semester(Semester* curSemester){
//     system("cls"); 
//     Course* pCourse = curSemester->CourseList;
//     if(!pCourse){
//         cout << "This semester hasn't yet been added course!!! First, please add the course to this semester";
//         return;
//     }
//     cout << "----------------------------------------------------------------------\n";
//     cout << "The courses list in semester " << curSemester->semester << " year " << curSemester->year << endl << endl;
//     while(pCourse){
//         cout << left << setw(15) << "Course ID" 
//              << left << setw(20) << "Course Name" 
//              << left << setw(15) << "Class Name"
//              << left << setw(15) << "Teacher"
//              << left << setw(8)  << "Credit"
//              << left << setw(15) << "Max Students"  
//              << left << setw(15) << "Day, Session" 
//              << left << setw(25) << "Number Current Students" << endl;

//         viewInfoOfCourse(pCourse->thisCourseInfo);
//         cout << pCourse->numCurStudents << endl;
//         pCourse = pCourse->nextCourse;
//     }
// }

// void viewAllListOfCourses(Semester* curSemester){
//     while(curSemester){

//         while(curSemester){
//             Course* pCourse = curSemester->CourseList;
//             if(!pCourse){
//                 cout << "This semester hasn't yet been added course!!! First, please add the course to this semester";
//                 return;
//             }
//             cout << "The courses list in semester " << curSemester->semester << " year " << curSemester->year << endl << endl;
//             while(pCourse){
//                 cout << "------------------------------------------------------------------------------\n";
//                 cout << "The courses list of semester " << curSemester->semester << " year " << curSemester->year << endl;
//                 cout << left << setw(15) << "Course ID" 
//                      << left << setw(25) << "Course Name" 
//                      << left << setw(15) << "Class Name"
//                      << left << setw(25) << "Teacher"
//                      << left << setw(3)  << "Credit"
//                      << left << setw(5)  << "Max Students"  
//                      << left << setw(3)  << "Day, Session" << endl;
//                 viewInfoOfCourse(pCourse->thisCourseInfo);
//                 pCourse = pCourse->nextCourse;
//             }
//         }
//     }
// }



// void updateCourseInformation(Semester* curSemester){

//     string courseName, courseID, className;
//     cout << "Enter the course name you want to add student: ";
//     getline(cin, courseName);

//     cout << "Enter the course ID you want to add student: ";
//     getline(cin, courseID);

//     cout << "Enter the class name of course you want to add student: ";
//     getline(cin, className);

//     Course* thisCourse = findTheCourse(curSemester, curSemester->year, curSemester->semester, courseName, courseID, className);

//     if(thisCourse){
//         while(true){

//             cout << left << setw(15) << "Course ID" 
//                  << left << setw(25) << "Course Name" 
//                  << left << setw(15) << "Class Name"
//                  << left << setw(25) << "Teacher"
//                  << left << setw(3)  << "Credit"
//                  << left << setw(4)  << "Max Students"   
//                  << left << setw(3)  << "Day, Session" << endl;
             
//             viewInfoOfCourse(thisCourse->thisCourseInfo);
            
//             cout << endl;
//             cout << "The current course name is " << thisCourse->thisCourseInfo.courseName << endl;
//             cout << "The current course ID is " << thisCourse->thisCourseInfo.courseID << endl;
//             cout << "The current class name is " << thisCourse->thisCourseInfo.className << endl;
//             cout << "The teacher name is " << thisCourse->thisCourseInfo.Teacher << endl;
//             cout << "The number of credits is " << thisCourse->thisCourseInfo.credit << endl;
//             cout << "The maximum number of students in the course is " << thisCourse->thisCourseInfo.maxStudent << endl;
//             cout << "The day of week and the session that the course will be performed are " << thisCourse->thisCourseInfo.CourseDate.day << ", "
//                                                                                              << thisCourse->thisCourseInfo.CourseDate.session << endl; 
//             cout << "0.Update finish\n1.Course name\n2.Course ID\n3.Class name\n4.Credits\n5.Max Students\n6.Day and session\nEnter the choice number to edit: ";
            
//             int choice; cin >> choice;
//             cin.ignore();

//             switch(choice){
                
//                 case 1: 
//                     cout << "Enter the new course name: ";
//                     getline(cin, thisCourse->thisCourseInfo.courseName);
//                     break;

//                 case 2:
//                     cout << "Enter the new course ID: ";
//                     getline(cin, thisCourse->thisCourseInfo.courseID);
//                     break;

//                 case 3:
//                     cout << "Enter the new class name: ";
//                     getline(cin, thisCourse->thisCourseInfo.className);
//                     break;

//                 case 4:
//                     cout << "Enter the new credit: ";
//                     do{
//                         cin >> thisCourse->thisCourseInfo.credit;
//                         if(thisCourse->thisCourseInfo.credit <= 0) cout << "The number of credits must > 0\n";
//                     }while(thisCourse->thisCourseInfo.credit <= 0);
//                     cin.ignore();
//                     break;

//                 case 5:
//                     int numMaxStudents;
//                     cout << "Enter the number of max students (must bigger than current): ";
//                     do{
//                         cin >> numMaxStudents;
//                     } while(numMaxStudents < thisCourse->thisCourseInfo.maxStudent);

//                     thisCourse->thisCourseInfo.maxStudent = numMaxStudents;
//                     cin.ignore();
//                     break;

//                 case 6:
//                     cout << "< 2 or > 7. Go back"   << endl
//                          << "2. Monday"    << endl
//                          << "3. Tueday"    << endl
//                          << "4. Wednesday" << endl
//                          << "5. Thursday"  << endl
//                          << "6. Friday"    << endl
//                          << "7. Saturday"  << endl
//                          << "Enter the selection of day of the week: ";

//                          int day; cin >> day;

//                          switch(day){
//                             case 2: thisCourse->thisCourseInfo.CourseDate.day = "MON"; break;
//                             case 3: thisCourse->thisCourseInfo.CourseDate.day = "TUE"; break;
//                             case 4: thisCourse->thisCourseInfo.CourseDate.day = "WED"; break;
//                             case 5: thisCourse->thisCourseInfo.CourseDate.day = "THU"; break;
//                             case 6: thisCourse->thisCourseInfo.CourseDate.day = "FRI"; break;
//                             case 7: thisCourse->thisCourseInfo.CourseDate.day = "SAT"; break;
//                             default: break;
//                          }

//                     cout << "< 1 or > 4. Go back" << endl
//                          << "1. S1 (07:30)" << endl
//                          << "2. S2 (09:30)" << endl
//                          << "3. S3 (13:30)" << endl
//                          << "4. S4 (15:30)" << endl
//                          << "Enter the selection of the session: ";
                         
//                          int session; cin >> session;

//                          switch(day){
//                             case 1: thisCourse->thisCourseInfo.CourseDate.session = "S1 (07:30)"; break;
//                             case 2: thisCourse->thisCourseInfo.CourseDate.session = "S2 (09:30)"; break;
//                             case 3: thisCourse->thisCourseInfo.CourseDate.session = "S3 (13:30)"; break;
//                             case 4: thisCourse->thisCourseInfo.CourseDate.session = "S4 (15:30)"; break;
//                             default: break;
//                          }
//                          cin.ignore();
//                     break;

//                 default: return;
//             }
//             cout << "\nThe new update course information\n";
//         }
//     }
//     else cout << "This course doesn't exist.\n";
// }







// void printListCoursesOfAStudent(Student* thisStudent, string semester, string year){
//     EnrolledCourse* firstCourse = thisStudent->CourseList;
//     cout << "The list of Courses you will study in this semester\n";
//     while(firstCourse){
//         if(firstCourse->ptoCourse->semester == semester && firstCourse->ptoCourse->year == year) break;
//         firstCourse = firstCourse->nextCourse;
//     }
//     while(firstCourse->ptoCourse->semester == semester && firstCourse->ptoCourse->year == year){
//         viewInfoOfCourse(firstCourse->ptoCourse->thisCourseInfo);
//         firstCourse = firstCourse->nextCourse;
//     }
// }